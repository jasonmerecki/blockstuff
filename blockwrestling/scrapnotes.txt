

a place for me to paste and save stuff I want to reference later

wallet
Mnemonic:      brisk oppose jaguar nest shift engine regret frown find sauce diesel venture


saving the address of the contract

Running migration: 2_deploy_contracts.js
  Deploying Wrestling...
  ... 0x539be9921004eff63044754bd456be9f0bacea208ea68fffda49ab1193dea091
  Wrestling: 0xc1e63497ab43cddf2d4a74c95cea238f963c9560
Saving successful migration to network...
  ... 0xd853c2fdbbbe46d9527bcfeeaf855da1e4bd51d313bb2df9738f6cb850462865

confirmed in ganache
  Transaction: 0x539be9921004eff63044754bd456be9f0bacea208ea68fffda49ab1193dea091
  Contract created: 0xc1e63497ab43cddf2d4a74c95cea238f963c9560
  Gas usage: 702738
  Block Number: 3
  Block Time: Fri Apr 06 2018 21:37:57 GMT-0600 (MDT)


when this was done
  Jasons-MacBook-Pro:blockwrestling jasonmerecki$ truffle console --network development
  truffle(development)> account0 = web3.eth.accounts[0]
we got the right accounts b/c the truffle-config.js pointed the network named development to our local ganache


calling the register method also creates a block:

truffle(development)> WrestlingInstance.registerAsAnOpponent({from: account1})
{ tx: '0x071bf608558e3d30d0cf3b36397f17a34656d4b88871fb7c6a2046bc02f06b02',
  receipt:
   { transactionHash: '0x071bf608558e3d30d0cf3b36397f17a34656d4b88871fb7c6a2046bc02f06b02',
     transactionIndex: 0,
     blockHash: '0xb29e2a37e66584766870d7bc5b3043661ae6bc761aa3bbb15da4f7835b0ef6ba',
     blockNumber: 5,
     gasUsed: 43892,
     cumulativeGasUsed: 43892,
     contractAddress: null,
     logs: [ [Object] ],
     status: '0x01',


firing the events also wil create a block and use gas to calculate the winner (note EndOfWrestlingEvent)

truffle(development)> WrestlingInstance.wrestle({from: account1, value: web3.toWei(20, "ether")})
{ tx: '0x7358c5ae3657bf0e383d7a02d1b9abab99797c3a5c6d0409061905eaae0e9d9f',
  receipt:
   { transactionHash: '0x7358c5ae3657bf0e383d7a02d1b9abab99797c3a5c6d0409061905eaae0e9d9f',
     transactionIndex: 0,
     blockHash: '0xc55968a32eb24cf1f70b1541893b9f1f8c45bb4f4f3aa5868b25c7c2d2944024',
     blockNumber: 9,
     gasUsed: 82660,
     cumulativeGasUsed: 82660,
     contractAddress: null,
     logs: [ [Object] ],
     status: '0x01',

  logs:
   [ { logIndex: 0,
       transactionIndex: 0,
       transactionHash: '0x7358c5ae3657bf0e383d7a02d1b9abab99797c3a5c6d0409061905eaae0e9d9f',
       blockHash: '0xc55968a32eb24cf1f70b1541893b9f1f8c45bb4f4f3aa5868b25c7c2d2944024',
       blockNumber: 9,
       address: '0xc1e63497ab43cddf2d4a74c95cea238f963c9560',
       type: 'mined',
       event: 'EndOfWrestlingEvent',


WrestlingInstance.withdraw({from: account1})

truffle(development)> WrestlingInstance.withdraw({from: account1})
{ tx: '0x3b8a2a5c9d55a81a42d420e497964c7fa0d1650ccf4aa10c8d2f0883c407a6af',
  receipt:
   { transactionHash: '0x3b8a2a5c9d55a81a42d420e497964c7fa0d1650ccf4aa10c8d2f0883c407a6af',
     transactionIndex: 0,
     blockHash: '0x8d1f0bd75e11de1e51f3c6968420c00e26ade53bfc5891999608f4bc11a4ebf3',
     blockNumber: 10,
     gasUsed: 19734,
     cumulativeGasUsed: 19734,
     contractAddress: null,
     logs: [],
     status: '0x01',
     logsBloom: '0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000' },
  logs: [] }
truffle(development)>


confirmed the balance changed:

truffle(development)> account1.getBalance()
TypeError: account1.getBalance is not a function
truffle(development)> web3.eth.getBalance(account1)
BigNumber { s: 1, e: 20, c: [ 1069791, 48700000000000 ] }
truffle(development)> web3.eth.getBalance(account0)
BigNumber { s: 1, e: 19, c: [ 928876, 28900000000000 ] }

The ether balance of your account, which you retrieve with web3.eth.getBalance(YOUR_ADDRESS).
The MetaCoin balance stored in the contract, which you retrieve with contractAddress.checkBalance(YOUR_ADDRESS).




/Volumes/BLOCKCHAIN




du -a / | sort -n -r | head -n 10
du -a /Applications | sort -n -r | head -n 10

writing genesis block
Jasons-MacBook-Pro:blockwrestling jasonmerecki$ geth --datadir=./chaindata/ init ./genesis.json
INFO [04-07|11:07:29] Maximum peer count                       ETH=25 LES=0 total=25
INFO [04-07|11:07:29] Allocated cache and file handles         database=/Users/jasonmerecki/wrkspaces/blockstuff/blockwrestling/chaindata/geth/chaindata cache=16 handles=16
INFO [04-07|11:07:29] Writing custom genesis block 
INFO [04-07|11:07:29] Persisted trie from memory database      nodes=0 size=0.00B time=12.098µs gcnodes=0 gcsize=0.00B gctime=0s livenodes=1 livesize=0.00B
INFO [04-07|11:07:29] Successfully wrote genesis state         database=chaindata                                                                        hash=0613eb…9a64e7
INFO [04-07|11:07:29] Allocated cache and file handles         database=/Users/jasonmerecki/wrkspaces/blockstuff/blockwrestling/chaindata/geth/lightchaindata cache=16 handles=16
INFO [04-07|11:07:29] Writing custom genesis block 
INFO [04-07|11:07:29] Persisted trie from memory database      nodes=0 size=0.00B time=1.753µs  gcnodes=0 gcsize=0.00B gctime=0s livenodes=1 livesize=0.00B
INFO [04-07|11:07:29] Successfully wrote genesis state         database=lightchaindata                                                                        hash=0613eb…9a64e7
Jasons-MacBook-Pro:blockwrestling jasonmerecki$ 

starting geth
NFO [04-07|11:08:08] Regenerated local transaction journal    transactions=0 accounts=0
INFO [04-07|11:08:08] Starting P2P networking 
INFO [04-07|11:08:10] UDP listener up                          self=enode://9b3968de81dc09143ff4f97e8e9c2bb61013020bcf69186a1a0e021b4b037596b867aab896a5b0fd3710da198821d84820975a97065209b33e98a4c72c794376@[::]:30303
INFO [04-07|11:08:10] RLPx listener up                         self=enode://9b3968de81dc09143ff4f97e8e9c2bb61013020bcf69186a1a0e021b4b037596b867aab896a5b0fd3710da198821d84820975a97065209b33e98a4c72c794376@[::]:30303
INFO [04-07|11:08:10] IPC endpoint opened                      url=/Users/jasonmerecki/wrkspaces/blockstuff/blockwrestling/chaindata/geth.ipc
INFO [04-07|11:08:10] HTTP endpoint opened                     url=http://127.0.0.1:8545                                                      cors= vhosts=localhost



geth --port 3020 --networkid 58342 --nodiscover --datadir="privchain" --maxpeers=0 --ipcpath $HOME/.ethereum/geth.ipc
[2017-08-18 23:40:50.327] [INFO] Sockets/3 - Connect to {"path":"/home/someone/.ethereum/geth.ipc"}


geth --datadir=./chaindata/ --rpc --ipcpath $HOME/Library/Ethereum/geth.ipc


geth --datadir=./chaindata/ --ipcpath $HOME/Library/Ethereum/geth.ipc

INFO [04-08|20:42:58] IPC endpoint opened                      url=/Users/jasonmerecki/wrkspaces/blockstuff/blockwrestling/chaindata/geth.ipc


open -a 'Ethereum Wallet' –rpc http://127.0.0.1:8545

ps -ef | grep 'Ethereum Wallet.app'

exec "/Applications/MyApp.app/Contents/MacOS/MyAppExecutableFile" [arguments]

exec "/Applications/Ethereum Wallet.app/Contents/MacOS/Ethereum Wallet" –rpc http://127.0.0.1:8545


open -a /Applications/Mist.app --args --rpc /var/folders/y1/jynwfrwj411bxck8whqgcbr00000gq/T/ethereum_dev_mode/geth.ipc

open -a /Applications/Mist.app --args --rpc /Users/jasonmerecki/wrkspaces/blockstuff/blockwrestling/chaindata/geth.ipc


open -a '/Applications/Ethereum Wallet.app' --args -rpc 127.0.0.1:8545

open -a /Applications/Ethereum\ Wallet.app --args –-rpc /Users/jasonmerecki/wrkspaces/blockstuff/blockwrestling/chaindata/geth.ipc

AHA WORKS IF I SPECIFY THE EXPECTED IPC FILE:

open -a '/Applications/Ethereum Wallet.app' --args –ipc $HOME/Library/Ethereum/geth.ipc


create account as hock3ystick
You can find your keyfiles folder using the main menu -> Accounts -> Backup -> Accounts. Keep a copy of the "keystore" folder where you can't lose it!


Jasons-MacBook-Pro:logs jasonmerecki$ geth attach
Welcome to the Geth JavaScript console!


instance: Geth/v1.8.3-stable-329ac18e/darwin-amd64/go1.10
coinbase: 0x317cd4881a3011a6b6d307a43a7fa22b4a3ac5b0
at block: 0 (Wed, 31 Dec 1969 17:00:00 MST)
 datadir: /Users/jasonmerecki/wrkspaces/blockstuff/blockwrestling/chaindata
 modules: admin:1.0 debug:1.0 eth:1.0 miner:1.0 net:1.0 personal:1.0 rpc:1.0 txpool:1.0 web3:1.0


ourTestNet: {
      host: "127.0.0.1",
      port: 8545,
      network_id: "*" 
    }


personal.unlockAccount('0x317cd4881A3011A6b6D307a43a7fa22B4a3AC5B0', 'hock3ystick')

need to start mining too, before migration

unning migration: 1_initial_migration.js
  Deploying Migrations...
  ... 0xb2c770eea4f85253fe0a2c7dbee378c02abbfa0aaeb627f107c12bc6cf740476
  Migrations: 0xecbd664e3d16ecec4f10b3461a024e8fc3f0ab26
Saving successful migration to network...
  ... 0xcc48f846b12f990b49bde0187544c569f15bb7b0b96edcf6fc78ac8b8d18b0e1
Saving artifacts...
Running migration: 2_deploy_contracts.js
  Deploying Wrestling...
  ... 0x0ddde02a10964578ccc14f754e749089edc7135ada0545117cf9d8244923f6f1
  Wrestling: 0x6dd774123736a61e3649da4e8a96cceaf367f184
Saving successful migration to network...
  ... 0xf1ac734ab8ba9025432091d3b2d741b4207b0752f4fdbe879445db1ff3c87b89
Saving artifacts...



truffle(ourTestNet)> Wrestling.address
'0x6dd774123736a61e3649da4e8a96cceaf367f184'
truffle(ourTestNet)> JSON.stringify(Wrestling.abi)
'[{"constant":true,"inputs":[],"name":"theWinner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"wrestler2","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"wrestler1Played","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"wrestler1","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"gameFinished","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"wrestler2Played","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"name":"wrestler1","type":"address"},{"indexed":false,"name":"wrestler2","type":"address"}],"name":"WrestlingStartsEvent","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"wrestler1Deposit","type":"uint256"},{"indexed":false,"name":"wrestler2Deposit","type":"uint256"}],"name":"EndOfRoundEvent","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"winner","type":"address"},{"indexed":false,"name":"gains","type":"uint256"}],"name":"EndOfWrestlingEvent","type":"event"},{"constant":false,"inputs":[],"name":"registerAsAnOpponent","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"wrestle","outputs":[],"payable":true,"stateMutability":"payable","type":"function"},{"constant":false,"inputs":[],"name":"withdraw","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"}]'
truffle(ourTestNet)> 


